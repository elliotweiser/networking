Author: Elliot Weiser
Date: 9/26/2013
Email: elliot.weiser@gmail.com
Compiler: g++ version 4.6.3
Editor: Vi IMproved version 7.3

------------------------------------------------------------------------------
SERVER -- A multithreaded HTTP server
------------------------------------------------------------------------------

DESCRIPTION:

    This program implements a web server that includes the following features:
        - A thread pool, which provides load balancing, and doesn't hog CPU
          time for threads with no work.  The number of threads in the pool
          depends on the number of cores in the machine.  If the `nproc'
          command does not exist in the PATH environment variable, then the 
          program will default to creating four worker threads.
        - Limited HTTP support
              * Protocols: 1.0, 1.1
              * Errors: 400, 403, 404, 408, 413, 500, 501

------------------------------------------------------------------------------

CONTAINS:

    README
    server_prog.cpp
    Makefile
    src/
        HttpServer.h
        HttpServer.cpp
        ServerThread.h
        ServerThread.cpp
        HttpRequest.h
        HttpRequest.cpp
        Http.h
        Http.cpp
        Memory.h
        Memory.cpp
        ErrorHandling.h
        ErrorHandling.cpp
    obj/
        <empty> (for storing .o files)
    Http/
        400.html
        403.html
        404.html
        408.html
        413.html
        500.html
        501.html
    WWW/
        favicon.ico  
        google.gif  
        index.html  
        monorail.jpg  
        pic.html  
        skype.png
        test/
            blah.txt
            dir/
                endtoend.pdf  
                index.html  
                testpage.html

------------------------------------------------------------------------------

TO BUILD:

    $ make

------------------------------------------------------------------------------

TO RUN:

    $ ./server_prog <port> <directory>

    For example, from this directory, run ./server_prog 8080 WWW, and you will 
    have a multithreaded server listening for connections on port 8080 and 
    serving files from the WWW directory.

------------------------------------------------------------------------------

TO CLEAN UP:
   
    $ make clean

    This will remove the server executable, and empty the obj directory

------------------------------------------------------------------------------

OTHER INFORMATION:

    This program was tested on valgrind --tool=memcheck and found no
    memory leaks.

------------------------------------------------------------------------------

KNOWN BUGS:

    On certain clients (i.e. telnet), it is possible to request files above 
    the given directory root by requesting a file from above that root.

